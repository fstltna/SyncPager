#!/usr/bin/env perl

# This tool alerts the BBS sysop if they are being paged

use strict;
use LWP::Simple;
#use Wx qw(:everything);

my $PLAYER="/usr/bin/audacious -q";
my $ALERTFILE="./ouralert.wav";
my $ALERTBELLFILE="./ouralertdoorbell.mp3";

# No changes below here
my $VERSION="1.2";
my $CONF_FILE="config.ini";
my $CHECK_URL="";
my $text="";
my $alertsound="";
my $CurAlert = $ALERTBELLFILE;
my $SleepHowLong=0;
my $CurNode="";
my $NodeUser="";
my $CurDate="";
my $PrivateKey="";

# Read in configuration options
open(CONF, "<$CONF_FILE") || die("Unable to read config file '$CONF_FILE'");
while(<CONF>)
{
	chop;
	my ($FIELD_TYPE, $FIELD_VALUE) = split (/	/, $_);
	#print("Type is $FIELD_TYPE\n");
	if ($FIELD_TYPE eq "CheckURL")
	{
		$CHECK_URL = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "AlertSound")
	{
		$CurAlert = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "SleepSecs")
	{
		$SleepHowLong = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "PrivateKey")
	{
		$PrivateKey = $FIELD_VALUE;
	}
}
close(CONF);

if ($CHECK_URL eq "")
{
	print "You have not set a URL to check in $CONF_FILE\n";
	exit 1;
}

sub AlertOwner
{
	my $CurNode = shift;
	my $NodeUser = shift;
	my $CurDate = shift;
	#print "Alerting Sysop\n";
#	print "Node: $CurNode - Node User: $NodeUser - Cur Date: $CurDate\n";
	print "Node: $CurNode - Node User: $NodeUser - $CurDate\n";
	system("$PLAYER $CurAlert");
}


print("Checking for Sysop Page Requests ($VERSION)\n");
print("===============================================\n");
print "Working on '$CHECK_URL'\n";

# Loop forever till break
while(-1)
{
	$text = get($CHECK_URL);
	open(FILENAME, '<', \$text);
	while(<FILENAME>)
	{
		chop();
		my ($CurNode, $NodeUser, $CurDate) = split('	', $_);
		AlertOwner($CurNode, $NodeUser, $CurDate);

	}
	close (FILENAME);
	sleep($SleepHowLong);	# Sleep till next check time (in seconds)
}
exit(0);
