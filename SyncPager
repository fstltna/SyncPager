#!/usr/bin/perl

# This tool alerts the BBS sysop if they are being paged

use strict;
use warnings;
use Email::Simple;
use Email::Simple::Creator;
use Email::Sender::Simple qw(sendmail);
use LWP::Simple;

my $PLAYER="/usr/bin/aplay -t wav -q";
my $ALERTFILE="./ouralert.wav";
my $ALERTBELLFILE="./ouralertdoorbell.wav";

# No changes below here
my $CurStatus="";
my $VERSION="1.0";
my $CONF_FILE="config.ini";
my $EMAIL_SUBJ="";
my $EMAIL_FROM="";
my $email="";
my $CHECK_URL="";
my $text="";
my $alertsound="";
my $CurAlert="";
my $SleepHowLong=0;

$CurAlert = $ALERTFILE;

# Read in configuration options
open(CONF, "<$CONF_FILE") || die("Unable to read config file '$CONF_FILE'");
while(<CONF>)
{
	chop;
	my ($FIELD_TYPE, $FIELD_VALUE) = split (/	/, $_);
	# print("Type is $FIELD_TYPE\n");
	if ($FIELD_TYPE eq "Email_Subj")
	{
		$EMAIL_SUBJ = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "Email_From")
	{
		$EMAIL_FROM = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "CheckURL")
	{
		$CHECK_URL = $FIELD_VALUE;
	}
	elsif ($FIELD_TYPE eq "AlertSound")
	{
		$CurAlert = $FIELD_VALUE;
	}
}
close(CONF);

if ($EMAIL_SUBJ eq "")
{
	print "You have not set a email subject in $CONF_FILE\n";
	exit 1;
}
if ($EMAIL_FROM eq "")
{
	print "You have not set a email sender in $CONF_FILE\n";
	exit 1;
}
if ($CHECK_URL eq "")
{
	print "You have not set a URL to check in $CONF_FILE\n";
	exit 1;
}

sub AlertOwner
{
	system("$PLAYER $CurAlert");
}


print("Checking for Sysop Page Requests ($VERSION)\n");
print("===============================================\n");
print "Working on '$CHECK_URL'\n";

while(<>)
{
	$text = get($CHECK_URL);
	open(FILENAME, '<', \$text);
	while(<FILENAME>)
	{
		chop();
		#print ("Line = '$_'\n");
		my ($CurNode, $NodeUser, $CurDate) = split('	', $_);
		print "Node: $CurNode - Node User: $NodeUser - Cur Date: $CurDate\n";
		AlertOwner();
	}
	close (FILENAME);
	sleep($SleepHowLong);
}
exit(0);
